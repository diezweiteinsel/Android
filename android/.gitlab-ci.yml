# Use a standard Java/Android Docker image. Adjust the version if needed.
image: openjdk:17-jdk

# Define the stages of the pipeline. They run in this order.
stages:
  - test
  - build

# Cache Gradle dependencies to speed up future pipeline runs.
cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle/

# Before running any script, make the Gradle wrapper executable.
before_script:
  - chmod +x ./gradlew

# Job for running unit tests (from your '/test' folder)
unit_tests:
  stage: test
  script:
    - ./gradlew testDebugUnitTest
  # Optional: Define when this job runs (e.g., on every push to any branch)
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'

# Job for building the debug APK
build_debug_apk:
  stage: build
  script:
    - ./gradlew assembleDebug
  # Define where the built APK should be stored so you can download it.
  artifacts:
    paths:
      - app/build/outputs/apk/debug/app-debug.apk
  # Optional: Only run this job on pushes to the 'main' branch
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main' && $CI_PIPELINE_SOURCE == 'push'